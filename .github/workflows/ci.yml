# .github/workflows/ci.yml
# This workflow defines the Continuous Integration (CI) pipeline
# for the Simple Task Manager application, focusing on dependency installation and testing.

name: CI Pipeline

# This workflow will run on:
on:
  # 1. Pushes to the specified branches
  push:
    branches:
      - main
      - develop # Ensure CI runs when code is pushed directly to develop

  # 2. Pull Requests (PRs) targeting the specified branches
  pull_request:
    branches:
      - main
      - develop # Ensure CI runs when a PR is opened/updated against develop

# Define the jobs (independent tasks) that make up this pipeline
jobs:
  # Job for Backend CI (Node.js/Express)
  backend_ci:
    name: Backend CI
    runs-on: ubuntu-latest # Use the latest Ubuntu runner provided by GitHub

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Use Node.js version 20 (or match your local version, e.g., '18.x')
          cache: 'npm' # Enable caching for npm dependencies
          cache-dependency-path: backend/package-lock.json # Path to backend's package-lock.json for cache key

      # Step 3: Install Backend Dependencies
      - name: Install Backend Dependencies
        run: cd backend && npm install --force # Use --force to ensure all deps are installed

      # REMOVED: Step 4: Run Backend Linting (This step has been removed)

      # Step 4 (was 5): Run Backend Tests
      # This step assumes you have Jest (or your test runner) set up in your backend/package.json
      # with a "test" script
      - name: Run Backend Tests
        run: cd backend && npm test

  # Job for Frontend CI (React/TypeScript)
  frontend_ci:
    name: Frontend CI
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Use Node.js version 20 (or match your local version)
          cache: 'npm' # Enable caching for npm dependencies
          cache-dependency-path: frontend/package-lock.json # Path to frontend's package-lock.json for cache key

      # Step 3: Install Frontend Dependencies
      - name: Install Frontend Dependencies
        run: cd frontend && npm install --force

      # REMOVED: Step 4: Run Frontend Linting (This step has been removed)

      # Step 4 (was 5): Run Frontend Tests
      # This step assumes your frontend/package.json has a "test" script
      # (e.g., "react-scripts test --watchAll=false" for Create React App)
      - name: Run Frontend Tests
        run: cd frontend && npm test
